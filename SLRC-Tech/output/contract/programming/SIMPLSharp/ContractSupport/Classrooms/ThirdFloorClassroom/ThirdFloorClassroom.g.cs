//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CrestronConstruct.
//     AppHost:     2.601.10.0
//     UI Plugin:   1.4201.17.0
//
//     Project:     SLRC-Tech
//     Version:     1.0.0.0
//     Sdk:         CH5:2.16.0
//     Strategy:    Modern
//     IndexOnly:   False
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Crestron.SimplSharp;
using Crestron.SimplSharpPro;
using Crestron.SimplSharpPro.DeviceSupport;
using SLRCTech;

namespace SLRCTech.Classrooms.ThirdFloorClassroom
{

    /// <summary>
    /// ThirdFloorClassroom
    /// </summary>
    public partial interface IThirdFloorClassroom 
    {
        object UserObject { get; set; }

        /// <summary>
        /// Classrooms.ThirdFloorClassroom.Left Room Label.Indirect Rich Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void LeftRoomLabel_IndirectRichText(ThirdFloorClassroomStringInputSigDelegate callback);

        /// <summary>
        /// Classrooms.ThirdFloorClassroom.Left Room Label.Indirect Rich Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void LeftRoomLabel_IndirectRichText(string serial);

        /// <summary>
        /// Classrooms.ThirdFloorClassroom.Right Room Label.Indirect Rich Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void RightRoomLabel_IndirectRichText(ThirdFloorClassroomStringInputSigDelegate callback);

        /// <summary>
        /// Classrooms.ThirdFloorClassroom.Right Room Label.Indirect Rich Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void RightRoomLabel_IndirectRichText(string serial);

        /// <summary>
        /// ComplexComponent Left Power Tab Button
        /// </summary>
        SLRCTech.Classrooms.ThirdFloorClassroom.ILeftPowerTabButton LeftPowerTabButton { get; }

        /// <summary>
        /// ComplexComponent Left Input Tab Button
        /// </summary>
        SLRCTech.Classrooms.ThirdFloorClassroom.ILeftInputTabButton LeftInputTabButton { get; }

        /// <summary>
        /// ComplexComponent Right Power Tab Button
        /// </summary>
        SLRCTech.Classrooms.ThirdFloorClassroom.IRightPowerTabButton RightPowerTabButton { get; }

        /// <summary>
        /// ComplexComponent Combine Separate Tab Button
        /// </summary>
        SLRCTech.Classrooms.ThirdFloorClassroom.ICombineSeparateTabButton CombineSeparateTabButton { get; }

        /// <summary>
        /// ComplexComponent Right Input Tab Button
        /// </summary>
        SLRCTech.Classrooms.ThirdFloorClassroom.IRightInputTabButton RightInputTabButton { get; }
    }

    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="stringInputSig">The <see cref="StringInputSig"/> joinInfo data.</param>
    /// <param name="thirdfloorclassroom">The <see cref="IThirdFloorClassroom"/> on which to apply the feedback.</param>
    public delegate void ThirdFloorClassroomStringInputSigDelegate(StringInputSig stringInputSig, IThirdFloorClassroom thirdfloorclassroom);

    /// <summary>
    /// ThirdFloorClassroom
    /// </summary>
    internal partial class ThirdFloorClassroom : IThirdFloorClassroom, IDisposable
    {
        #region Standard CH5 Component members

        private ComponentMediator ComponentMediator { get; set; }

        public object UserObject { get; set; }

        /// <summary>
        /// Gets the ControlJoinId a.k.a. SmartObjectId.  This Id identifies the extender symbol.
        /// </summary>
        public uint ControlJoinId { get; private set; }

        private IList<BasicTriListWithSmartObject> _devices;

        /// <summary>
        /// Gets the list of devices.
        /// </summary>
        public IList<BasicTriListWithSmartObject> Devices { get { return _devices; } }

        #endregion

        #region Joins

        private static class Joins
        {
            /// <summary>
            /// Serial signals.
            /// </summary>
            internal static class Strings
            {

                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: Classrooms.ThirdFloorClassroom.LeftRoomLabel.IndirectRichText
                /// Classrooms.ThirdFloorClassroom.Left Room Label.Indirect Rich Text
                /// </summary>
                public const uint LeftRoomLabel_IndirectRichTextState = 1;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: Classrooms.ThirdFloorClassroom.RightRoomLabel.IndirectRichText
                /// Classrooms.ThirdFloorClassroom.Right Room Label.Indirect Rich Text
                /// </summary>
                public const uint RightRoomLabel_IndirectRichTextState = 2;
            }
        }

        #endregion

        #region Construction and Initialization

        /// <summary>
        /// Initializes a new instance of the <see cref="ThirdFloorClassroom"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        internal ThirdFloorClassroom(ComponentMediator componentMediator, uint controlJoinId, uint? itemCount)
        {
            ComponentMediator = componentMediator;
            Initialize(controlJoinId, itemCount);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ThirdFloorClassroom"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        internal ThirdFloorClassroom(ComponentMediator componentMediator, uint controlJoinId) : this(componentMediator, controlJoinId, null)
        {
        }

        /// <summary>
        /// Initializes a new instance with default itemCount.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        private void Initialize(uint controlJoinId)
        {
            Initialize(controlJoinId, null);
        }

        private Dictionary<string, Indexes> _indexLookup = new Dictionary<string, Indexes>();

        /// <summary>
        /// Initializes a new instance of the <see cref="ThirdFloorClassroom"/> component class.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        private void Initialize(uint controlJoinId, uint? itemCount)
        {
            ControlJoinId = controlJoinId; 
 
            _devices = new List<BasicTriListWithSmartObject>(); 
 
            LeftPowerTabButton = new SLRCTech.Classrooms.ThirdFloorClassroom.LeftPowerTabButton(ComponentMediator, 26);
            LeftInputTabButton = new SLRCTech.Classrooms.ThirdFloorClassroom.LeftInputTabButton(ComponentMediator, 27);
            RightPowerTabButton = new SLRCTech.Classrooms.ThirdFloorClassroom.RightPowerTabButton(ComponentMediator, 28);
            CombineSeparateTabButton = new SLRCTech.Classrooms.ThirdFloorClassroom.CombineSeparateTabButton(ComponentMediator, 29);
            RightInputTabButton = new SLRCTech.Classrooms.ThirdFloorClassroom.RightInputTabButton(ComponentMediator, 30);
        }

        public void AddDevice(BasicTriListWithSmartObject device)
        {
            Devices.Add(device);
            ComponentMediator.HookSmartObjectEvents(device.SmartObjects[ControlJoinId]);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.LeftPowerTabButton)LeftPowerTabButton).AddDevice(device);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.LeftInputTabButton)LeftInputTabButton).AddDevice(device);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.RightPowerTabButton)RightPowerTabButton).AddDevice(device);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.CombineSeparateTabButton)CombineSeparateTabButton).AddDevice(device);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.RightInputTabButton)RightInputTabButton).AddDevice(device);
        }

        public void RemoveDevice(BasicTriListWithSmartObject device)
        {
            Devices.Remove(device);
            ComponentMediator.UnHookSmartObjectEvents(device.SmartObjects[ControlJoinId]);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.LeftPowerTabButton)LeftPowerTabButton).RemoveDevice(device);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.LeftInputTabButton)LeftInputTabButton).RemoveDevice(device);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.RightPowerTabButton)RightPowerTabButton).RemoveDevice(device);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.CombineSeparateTabButton)CombineSeparateTabButton).RemoveDevice(device);

            ((SLRCTech.Classrooms.ThirdFloorClassroom.RightInputTabButton)RightInputTabButton).RemoveDevice(device);
        }

        #endregion

        #region CH5 Contract



        /// <inheritdoc/>
        public void LeftRoomLabel_IndirectRichText(ThirdFloorClassroomStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.LeftRoomLabel_IndirectRichTextState], this);
            }
        }

        /// <inheritdoc/>
        public void LeftRoomLabel_IndirectRichText(string serial)
        {
            LeftRoomLabel_IndirectRichText((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void RightRoomLabel_IndirectRichText(ThirdFloorClassroomStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.RightRoomLabel_IndirectRichTextState], this);
            }
        }

        /// <inheritdoc/>
        public void RightRoomLabel_IndirectRichText(string serial)
        {
            RightRoomLabel_IndirectRichText((sig, component) => sig.StringValue = serial);
        }

        /// <summary>
        /// ComplexComponent Left Power Tab Button
        /// </summary>
        public SLRCTech.Classrooms.ThirdFloorClassroom.ILeftPowerTabButton LeftPowerTabButton { get; private set; }

        /// <summary>
        /// ComplexComponent Left Input Tab Button
        /// </summary>
        public SLRCTech.Classrooms.ThirdFloorClassroom.ILeftInputTabButton LeftInputTabButton { get; private set; }

        /// <summary>
        /// ComplexComponent Right Power Tab Button
        /// </summary>
        public SLRCTech.Classrooms.ThirdFloorClassroom.IRightPowerTabButton RightPowerTabButton { get; private set; }

        /// <summary>
        /// ComplexComponent Combine Separate Tab Button
        /// </summary>
        public SLRCTech.Classrooms.ThirdFloorClassroom.ICombineSeparateTabButton CombineSeparateTabButton { get; private set; }

        /// <summary>
        /// ComplexComponent Right Input Tab Button
        /// </summary>
        public SLRCTech.Classrooms.ThirdFloorClassroom.IRightInputTabButton RightInputTabButton { get; private set; }

        #endregion

        #region Overrides

        public override int GetHashCode()
        {
            return (int)ControlJoinId;
        }

        public override string ToString()
        {
            return string.Format("Contract: {0} Component: {1} HashCode: {2} {3}", "ThirdFloorClassroom", GetType().Name, GetHashCode(), UserObject != null ? "UserObject: " + UserObject : null);
        }

        #endregion

        #region IDisposable

        public bool IsDisposed { get; set; }

        public void Dispose()
        {
            if (IsDisposed)
                return;

            IsDisposed = true;

        }

        #endregion
    }
}
