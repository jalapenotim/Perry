//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CrestronConstruct.
//     AppHost:     2.601.10.0
//     UI Plugin:   1.4201.17.0
//
//     Project:     SLRC-Tech
//     Version:     1.0.0.0
//     Sdk:         CH5:2.16.0
//     Strategy:    Modern
//     IndexOnly:   False
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Crestron.SimplSharp;
using Crestron.SimplSharpPro;
using Crestron.SimplSharpPro.DeviceSupport;
using SLRCTech;

namespace SLRCTech.CableTV
{

    /// <summary>
    /// Allow events by list item and states (feedbacks) to be set by item index.
    /// </summary>
    public partial interface ICATVPresetsByItem
    {
        /// <summary>
        /// Fires on button list presses.  Event carries <see="IndexedButtonEventArgs"/> with ButtonIndex property (0 based).
        /// </summary>
        event EventHandler<IndexedButtonEventArgs> Button_PressEvent;

        /// <summary>
        /// Button1.ItemSelected Feedback
        /// </summary>
        /// <param name="buttonIndex">The index of the button (0 based).</param>
        /// <param name="callback">The delegate to set the feedback.</param>
        void Button_Selected(ushort buttonIndex, CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Helper Button1.ItemSelected Feedback
        /// </summary>
        /// <param name="buttonIndex">The index of the button (0 based).</param>
        /// <param name="digital">The <see="bool"/> value to set on the panel.</param>
        void Button_Selected(ushort buttonIndex, bool digital);

        /// <summary>
        /// Button1.Text Feedback
        /// </summary>
        /// <param name="buttonIndex">The index of the button (0 based).</param>
        /// <param name="callback">The delegate to set the feedback.</param>
        void Button_Text(ushort buttonIndex, CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Helper Button1.Text Feedback
        /// </summary>
        /// <param name="buttonIndex">The index of the button (0 based).</param>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_Text(ushort buttonIndex, string serial);

    }


    /// <summary>
    /// Search List
    /// </summary>
    internal partial class CATVPresets
    {
        #region CH5 Contract
        /// <inheritdoc/>
        public event EventHandler<IndexedButtonEventArgs> Button_PressEvent;
        private void onButton_Press(IndexedEventArgs eventArgs)
        {
            EventHandler<IndexedButtonEventArgs> handler = Button_PressEvent;
            if (handler != null)
                handler(this, new IndexedButtonEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.JoinIndex));
        }
                
        /// <inheritdoc/>
        public void Button_Selected(ushort buttonIndex, CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_1_Button_SelectedState + (uint) buttonIndex], this);
            }
        }

        /// <inheritdoc/>
        public void Button_Selected(ushort buttonIndex, bool digital)
        {
            Button_Selected(buttonIndex, (sig, component) => sig.BoolValue = digital);
        }


        /// <inheritdoc/>
        public void Button_Text(ushort buttonIndex, CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_1_Button_TextState + (uint)buttonIndex * 1], this);
            }
        }

        /// <inheritdoc/>
        public void Button_Text(ushort buttonIndex, string serial)
        {
            Button_Text(buttonIndex, (sig, component) => sig.StringValue = serial);
        }

        #endregion
    }

    /// <summary>
    /// CATV Presets
    /// </summary>
    public partial interface ICATVPresets : ICATVPresetsByItem
    {
        object UserObject { get; set; }

        /// <summary>
        /// Event Button1.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_1_Button_PressEvent;

        /// <summary>
        /// Event Button2.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_2_Button_PressEvent;

        /// <summary>
        /// Event Button3.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_3_Button_PressEvent;

        /// <summary>
        /// Event Button4.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_4_Button_PressEvent;

        /// <summary>
        /// Event Button5.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_5_Button_PressEvent;

        /// <summary>
        /// Event Button6.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_6_Button_PressEvent;

        /// <summary>
        /// Event Button7.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_7_Button_PressEvent;

        /// <summary>
        /// Event Button8.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_8_Button_PressEvent;

        /// <summary>
        /// Event Button9.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_9_Button_PressEvent;

        /// <summary>
        /// Event Button10.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_10_Button_PressEvent;

        /// <summary>
        /// Event Button11.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_11_Button_PressEvent;

        /// <summary>
        /// Event Button12.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_12_Button_PressEvent;

        /// <summary>
        /// Event Button13.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_13_Button_PressEvent;

        /// <summary>
        /// Event Button14.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_14_Button_PressEvent;

        /// <summary>
        /// Event Button15.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_15_Button_PressEvent;

        /// <summary>
        /// Event Button16.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_16_Button_PressEvent;

        /// <summary>
        /// Event Button17.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_17_Button_PressEvent;

        /// <summary>
        /// Event Button18.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_18_Button_PressEvent;

        /// <summary>
        /// Event Button19.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_19_Button_PressEvent;

        /// <summary>
        /// Event Button20.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_20_Button_PressEvent;

        /// <summary>
        /// Event Button21.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_21_Button_PressEvent;

        /// <summary>
        /// Event Button22.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_22_Button_PressEvent;

        /// <summary>
        /// Event Button23.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_23_Button_PressEvent;

        /// <summary>
        /// Event Button24.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_24_Button_PressEvent;

        /// <summary>
        /// Event Button25.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_25_Button_PressEvent;

        /// <summary>
        /// Event Button26.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_26_Button_PressEvent;

        /// <summary>
        /// Event Button27.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_27_Button_PressEvent;

        /// <summary>
        /// Event Button28.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_28_Button_PressEvent;

        /// <summary>
        /// Event Button29.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_29_Button_PressEvent;

        /// <summary>
        /// Event Button30.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_30_Button_PressEvent;

        /// <summary>
        /// Event Button31.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_31_Button_PressEvent;

        /// <summary>
        /// Event Button32.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_32_Button_PressEvent;

        /// <summary>
        /// Event Button33.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_33_Button_PressEvent;

        /// <summary>
        /// Event Button34.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_34_Button_PressEvent;

        /// <summary>
        /// Event Button35.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_35_Button_PressEvent;

        /// <summary>
        /// Event Button36.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_36_Button_PressEvent;

        /// <summary>
        /// Event Button37.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_37_Button_PressEvent;

        /// <summary>
        /// Event Button38.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_38_Button_PressEvent;

        /// <summary>
        /// Event Button39.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_39_Button_PressEvent;

        /// <summary>
        /// Event Button40.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_40_Button_PressEvent;

        /// <summary>
        /// Event Button41.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_41_Button_PressEvent;

        /// <summary>
        /// Event Button42.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_42_Button_PressEvent;

        /// <summary>
        /// Event Button43.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_43_Button_PressEvent;

        /// <summary>
        /// Event Button44.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_44_Button_PressEvent;

        /// <summary>
        /// Event Button45.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_45_Button_PressEvent;

        /// <summary>
        /// Event Button46.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_46_Button_PressEvent;

        /// <summary>
        /// Event Button47.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_47_Button_PressEvent;

        /// <summary>
        /// Event Button48.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_48_Button_PressEvent;

        /// <summary>
        /// Event Button49.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_49_Button_PressEvent;

        /// <summary>
        /// Event Button50.ItemPress (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Button_50_Button_PressEvent;

        /// <summary>
        /// Button1.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_1_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button1.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_1_Button_Selected(bool digital);

        /// <summary>
        /// Button2.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_2_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button2.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_2_Button_Selected(bool digital);

        /// <summary>
        /// Button3.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_3_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button3.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_3_Button_Selected(bool digital);

        /// <summary>
        /// Button4.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_4_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button4.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_4_Button_Selected(bool digital);

        /// <summary>
        /// Button5.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_5_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button5.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_5_Button_Selected(bool digital);

        /// <summary>
        /// Button6.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_6_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button6.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_6_Button_Selected(bool digital);

        /// <summary>
        /// Button7.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_7_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button7.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_7_Button_Selected(bool digital);

        /// <summary>
        /// Button8.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_8_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button8.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_8_Button_Selected(bool digital);

        /// <summary>
        /// Button9.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_9_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button9.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_9_Button_Selected(bool digital);

        /// <summary>
        /// Button10.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_10_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button10.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_10_Button_Selected(bool digital);

        /// <summary>
        /// Button11.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_11_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button11.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_11_Button_Selected(bool digital);

        /// <summary>
        /// Button12.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_12_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button12.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_12_Button_Selected(bool digital);

        /// <summary>
        /// Button13.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_13_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button13.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_13_Button_Selected(bool digital);

        /// <summary>
        /// Button14.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_14_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button14.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_14_Button_Selected(bool digital);

        /// <summary>
        /// Button15.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_15_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button15.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_15_Button_Selected(bool digital);

        /// <summary>
        /// Button16.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_16_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button16.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_16_Button_Selected(bool digital);

        /// <summary>
        /// Button17.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_17_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button17.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_17_Button_Selected(bool digital);

        /// <summary>
        /// Button18.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_18_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button18.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_18_Button_Selected(bool digital);

        /// <summary>
        /// Button19.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_19_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button19.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_19_Button_Selected(bool digital);

        /// <summary>
        /// Button20.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_20_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button20.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_20_Button_Selected(bool digital);

        /// <summary>
        /// Button21.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_21_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button21.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_21_Button_Selected(bool digital);

        /// <summary>
        /// Button22.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_22_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button22.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_22_Button_Selected(bool digital);

        /// <summary>
        /// Button23.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_23_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button23.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_23_Button_Selected(bool digital);

        /// <summary>
        /// Button24.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_24_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button24.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_24_Button_Selected(bool digital);

        /// <summary>
        /// Button25.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_25_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button25.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_25_Button_Selected(bool digital);

        /// <summary>
        /// Button26.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_26_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button26.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_26_Button_Selected(bool digital);

        /// <summary>
        /// Button27.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_27_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button27.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_27_Button_Selected(bool digital);

        /// <summary>
        /// Button28.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_28_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button28.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_28_Button_Selected(bool digital);

        /// <summary>
        /// Button29.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_29_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button29.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_29_Button_Selected(bool digital);

        /// <summary>
        /// Button30.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_30_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button30.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_30_Button_Selected(bool digital);

        /// <summary>
        /// Button31.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_31_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button31.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_31_Button_Selected(bool digital);

        /// <summary>
        /// Button32.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_32_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button32.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_32_Button_Selected(bool digital);

        /// <summary>
        /// Button33.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_33_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button33.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_33_Button_Selected(bool digital);

        /// <summary>
        /// Button34.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_34_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button34.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_34_Button_Selected(bool digital);

        /// <summary>
        /// Button35.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_35_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button35.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_35_Button_Selected(bool digital);

        /// <summary>
        /// Button36.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_36_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button36.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_36_Button_Selected(bool digital);

        /// <summary>
        /// Button37.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_37_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button37.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_37_Button_Selected(bool digital);

        /// <summary>
        /// Button38.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_38_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button38.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_38_Button_Selected(bool digital);

        /// <summary>
        /// Button39.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_39_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button39.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_39_Button_Selected(bool digital);

        /// <summary>
        /// Button40.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_40_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button40.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_40_Button_Selected(bool digital);

        /// <summary>
        /// Button41.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_41_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button41.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_41_Button_Selected(bool digital);

        /// <summary>
        /// Button42.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_42_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button42.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_42_Button_Selected(bool digital);

        /// <summary>
        /// Button43.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_43_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button43.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_43_Button_Selected(bool digital);

        /// <summary>
        /// Button44.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_44_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button44.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_44_Button_Selected(bool digital);

        /// <summary>
        /// Button45.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_45_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button45.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_45_Button_Selected(bool digital);

        /// <summary>
        /// Button46.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_46_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button46.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_46_Button_Selected(bool digital);

        /// <summary>
        /// Button47.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_47_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button47.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_47_Button_Selected(bool digital);

        /// <summary>
        /// Button48.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_48_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button48.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_48_Button_Selected(bool digital);

        /// <summary>
        /// Button49.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_49_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button49.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_49_Button_Selected(bool digital);

        /// <summary>
        /// Button50.ItemSelected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Button_50_Button_Selected(CATVPresetsBoolInputSigDelegate callback);

        /// <summary>
        /// Button50.ItemSelected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Button_50_Button_Selected(bool digital);

        /// <summary>
        /// Button1.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_1_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button1.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_1_Button_Text(string serial);

        /// <summary>
        /// Button2.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_2_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button2.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_2_Button_Text(string serial);

        /// <summary>
        /// Button3.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_3_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button3.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_3_Button_Text(string serial);

        /// <summary>
        /// Button4.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_4_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button4.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_4_Button_Text(string serial);

        /// <summary>
        /// Button5.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_5_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button5.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_5_Button_Text(string serial);

        /// <summary>
        /// Button6.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_6_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button6.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_6_Button_Text(string serial);

        /// <summary>
        /// Button7.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_7_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button7.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_7_Button_Text(string serial);

        /// <summary>
        /// Button8.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_8_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button8.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_8_Button_Text(string serial);

        /// <summary>
        /// Button9.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_9_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button9.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_9_Button_Text(string serial);

        /// <summary>
        /// Button10.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_10_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button10.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_10_Button_Text(string serial);

        /// <summary>
        /// Button11.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_11_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button11.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_11_Button_Text(string serial);

        /// <summary>
        /// Button12.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_12_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button12.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_12_Button_Text(string serial);

        /// <summary>
        /// Button13.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_13_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button13.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_13_Button_Text(string serial);

        /// <summary>
        /// Button14.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_14_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button14.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_14_Button_Text(string serial);

        /// <summary>
        /// Button15.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_15_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button15.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_15_Button_Text(string serial);

        /// <summary>
        /// Button16.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_16_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button16.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_16_Button_Text(string serial);

        /// <summary>
        /// Button17.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_17_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button17.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_17_Button_Text(string serial);

        /// <summary>
        /// Button18.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_18_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button18.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_18_Button_Text(string serial);

        /// <summary>
        /// Button19.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_19_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button19.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_19_Button_Text(string serial);

        /// <summary>
        /// Button20.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_20_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button20.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_20_Button_Text(string serial);

        /// <summary>
        /// Button21.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_21_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button21.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_21_Button_Text(string serial);

        /// <summary>
        /// Button22.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_22_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button22.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_22_Button_Text(string serial);

        /// <summary>
        /// Button23.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_23_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button23.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_23_Button_Text(string serial);

        /// <summary>
        /// Button24.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_24_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button24.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_24_Button_Text(string serial);

        /// <summary>
        /// Button25.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_25_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button25.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_25_Button_Text(string serial);

        /// <summary>
        /// Button26.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_26_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button26.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_26_Button_Text(string serial);

        /// <summary>
        /// Button27.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_27_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button27.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_27_Button_Text(string serial);

        /// <summary>
        /// Button28.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_28_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button28.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_28_Button_Text(string serial);

        /// <summary>
        /// Button29.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_29_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button29.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_29_Button_Text(string serial);

        /// <summary>
        /// Button30.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_30_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button30.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_30_Button_Text(string serial);

        /// <summary>
        /// Button31.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_31_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button31.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_31_Button_Text(string serial);

        /// <summary>
        /// Button32.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_32_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button32.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_32_Button_Text(string serial);

        /// <summary>
        /// Button33.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_33_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button33.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_33_Button_Text(string serial);

        /// <summary>
        /// Button34.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_34_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button34.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_34_Button_Text(string serial);

        /// <summary>
        /// Button35.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_35_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button35.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_35_Button_Text(string serial);

        /// <summary>
        /// Button36.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_36_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button36.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_36_Button_Text(string serial);

        /// <summary>
        /// Button37.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_37_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button37.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_37_Button_Text(string serial);

        /// <summary>
        /// Button38.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_38_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button38.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_38_Button_Text(string serial);

        /// <summary>
        /// Button39.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_39_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button39.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_39_Button_Text(string serial);

        /// <summary>
        /// Button40.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_40_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button40.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_40_Button_Text(string serial);

        /// <summary>
        /// Button41.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_41_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button41.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_41_Button_Text(string serial);

        /// <summary>
        /// Button42.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_42_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button42.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_42_Button_Text(string serial);

        /// <summary>
        /// Button43.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_43_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button43.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_43_Button_Text(string serial);

        /// <summary>
        /// Button44.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_44_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button44.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_44_Button_Text(string serial);

        /// <summary>
        /// Button45.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_45_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button45.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_45_Button_Text(string serial);

        /// <summary>
        /// Button46.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_46_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button46.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_46_Button_Text(string serial);

        /// <summary>
        /// Button47.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_47_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button47.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_47_Button_Text(string serial);

        /// <summary>
        /// Button48.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_48_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button48.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_48_Button_Text(string serial);

        /// <summary>
        /// Button49.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_49_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button49.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_49_Button_Text(string serial);

        /// <summary>
        /// Button50.Text Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Button_50_Button_Text(CATVPresetsStringInputSigDelegate callback);

        /// <summary>
        /// Button50.Text Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Button_50_Button_Text(string serial);
    }

    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="boolInputSig">The <see cref="BoolInputSig"/> joinInfo data.</param>
    /// <param name="catvpresets">The <see cref="ICATVPresets"/> on which to apply the feedback.</param>
    public delegate void CATVPresetsBoolInputSigDelegate(BoolInputSig boolInputSig, ICATVPresets catvpresets);
    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="stringInputSig">The <see cref="StringInputSig"/> joinInfo data.</param>
    /// <param name="catvpresets">The <see cref="ICATVPresets"/> on which to apply the feedback.</param>
    public delegate void CATVPresetsStringInputSigDelegate(StringInputSig stringInputSig, ICATVPresets catvpresets);

    /// <summary>
    /// CATV Presets
    /// </summary>
    internal partial class CATVPresets : ICATVPresets, IDisposable
    {
        #region Standard CH5 Component members

        private ComponentMediator ComponentMediator { get; set; }

        public object UserObject { get; set; }

        /// <summary>
        /// Gets the ControlJoinId a.k.a. SmartObjectId.  This Id identifies the extender symbol.
        /// </summary>
        public uint ControlJoinId { get; private set; }

        private IList<BasicTriListWithSmartObject> _devices;

        /// <summary>
        /// Gets the list of devices.
        /// </summary>
        public IList<BasicTriListWithSmartObject> Devices { get { return _devices; } }

        #endregion

        #region Joins

        private static class Joins
        {
            /// <summary>
            /// Digital signals,
            /// </summary>
            internal static class Booleans
            {
                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button1ItemPress
                /// Button1.ItemPress
                /// </summary>
                public const uint Button_1_Button_PressEvent = 1001;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button2ItemPress
                /// Button2.ItemPress
                /// </summary>
                public const uint Button_2_Button_PressEvent = 1002;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button3ItemPress
                /// Button3.ItemPress
                /// </summary>
                public const uint Button_3_Button_PressEvent = 1003;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button4ItemPress
                /// Button4.ItemPress
                /// </summary>
                public const uint Button_4_Button_PressEvent = 1004;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button5ItemPress
                /// Button5.ItemPress
                /// </summary>
                public const uint Button_5_Button_PressEvent = 1005;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button6ItemPress
                /// Button6.ItemPress
                /// </summary>
                public const uint Button_6_Button_PressEvent = 1006;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button7ItemPress
                /// Button7.ItemPress
                /// </summary>
                public const uint Button_7_Button_PressEvent = 1007;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button8ItemPress
                /// Button8.ItemPress
                /// </summary>
                public const uint Button_8_Button_PressEvent = 1008;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button9ItemPress
                /// Button9.ItemPress
                /// </summary>
                public const uint Button_9_Button_PressEvent = 1009;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button10ItemPress
                /// Button10.ItemPress
                /// </summary>
                public const uint Button_10_Button_PressEvent = 1010;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button11ItemPress
                /// Button11.ItemPress
                /// </summary>
                public const uint Button_11_Button_PressEvent = 1011;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button12ItemPress
                /// Button12.ItemPress
                /// </summary>
                public const uint Button_12_Button_PressEvent = 1012;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button13ItemPress
                /// Button13.ItemPress
                /// </summary>
                public const uint Button_13_Button_PressEvent = 1013;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button14ItemPress
                /// Button14.ItemPress
                /// </summary>
                public const uint Button_14_Button_PressEvent = 1014;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button15ItemPress
                /// Button15.ItemPress
                /// </summary>
                public const uint Button_15_Button_PressEvent = 1015;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button16ItemPress
                /// Button16.ItemPress
                /// </summary>
                public const uint Button_16_Button_PressEvent = 1016;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button17ItemPress
                /// Button17.ItemPress
                /// </summary>
                public const uint Button_17_Button_PressEvent = 1017;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button18ItemPress
                /// Button18.ItemPress
                /// </summary>
                public const uint Button_18_Button_PressEvent = 1018;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button19ItemPress
                /// Button19.ItemPress
                /// </summary>
                public const uint Button_19_Button_PressEvent = 1019;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button20ItemPress
                /// Button20.ItemPress
                /// </summary>
                public const uint Button_20_Button_PressEvent = 1020;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button21ItemPress
                /// Button21.ItemPress
                /// </summary>
                public const uint Button_21_Button_PressEvent = 1021;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button22ItemPress
                /// Button22.ItemPress
                /// </summary>
                public const uint Button_22_Button_PressEvent = 1022;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button23ItemPress
                /// Button23.ItemPress
                /// </summary>
                public const uint Button_23_Button_PressEvent = 1023;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button24ItemPress
                /// Button24.ItemPress
                /// </summary>
                public const uint Button_24_Button_PressEvent = 1024;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button25ItemPress
                /// Button25.ItemPress
                /// </summary>
                public const uint Button_25_Button_PressEvent = 1025;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button26ItemPress
                /// Button26.ItemPress
                /// </summary>
                public const uint Button_26_Button_PressEvent = 1026;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button27ItemPress
                /// Button27.ItemPress
                /// </summary>
                public const uint Button_27_Button_PressEvent = 1027;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button28ItemPress
                /// Button28.ItemPress
                /// </summary>
                public const uint Button_28_Button_PressEvent = 1028;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button29ItemPress
                /// Button29.ItemPress
                /// </summary>
                public const uint Button_29_Button_PressEvent = 1029;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button30ItemPress
                /// Button30.ItemPress
                /// </summary>
                public const uint Button_30_Button_PressEvent = 1030;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button31ItemPress
                /// Button31.ItemPress
                /// </summary>
                public const uint Button_31_Button_PressEvent = 1031;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button32ItemPress
                /// Button32.ItemPress
                /// </summary>
                public const uint Button_32_Button_PressEvent = 1032;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button33ItemPress
                /// Button33.ItemPress
                /// </summary>
                public const uint Button_33_Button_PressEvent = 1033;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button34ItemPress
                /// Button34.ItemPress
                /// </summary>
                public const uint Button_34_Button_PressEvent = 1034;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button35ItemPress
                /// Button35.ItemPress
                /// </summary>
                public const uint Button_35_Button_PressEvent = 1035;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button36ItemPress
                /// Button36.ItemPress
                /// </summary>
                public const uint Button_36_Button_PressEvent = 1036;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button37ItemPress
                /// Button37.ItemPress
                /// </summary>
                public const uint Button_37_Button_PressEvent = 1037;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button38ItemPress
                /// Button38.ItemPress
                /// </summary>
                public const uint Button_38_Button_PressEvent = 1038;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button39ItemPress
                /// Button39.ItemPress
                /// </summary>
                public const uint Button_39_Button_PressEvent = 1039;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button40ItemPress
                /// Button40.ItemPress
                /// </summary>
                public const uint Button_40_Button_PressEvent = 1040;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button41ItemPress
                /// Button41.ItemPress
                /// </summary>
                public const uint Button_41_Button_PressEvent = 1041;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button42ItemPress
                /// Button42.ItemPress
                /// </summary>
                public const uint Button_42_Button_PressEvent = 1042;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button43ItemPress
                /// Button43.ItemPress
                /// </summary>
                public const uint Button_43_Button_PressEvent = 1043;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button44ItemPress
                /// Button44.ItemPress
                /// </summary>
                public const uint Button_44_Button_PressEvent = 1044;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button45ItemPress
                /// Button45.ItemPress
                /// </summary>
                public const uint Button_45_Button_PressEvent = 1045;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button46ItemPress
                /// Button46.ItemPress
                /// </summary>
                public const uint Button_46_Button_PressEvent = 1046;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button47ItemPress
                /// Button47.ItemPress
                /// </summary>
                public const uint Button_47_Button_PressEvent = 1047;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button48ItemPress
                /// Button48.ItemPress
                /// </summary>
                public const uint Button_48_Button_PressEvent = 1048;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button49ItemPress
                /// Button49.ItemPress
                /// </summary>
                public const uint Button_49_Button_PressEvent = 1049;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: CableTV.CATVPresets.Button50ItemPress
                /// Button50.ItemPress
                /// </summary>
                public const uint Button_50_Button_PressEvent = 1050;


                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button1ItemSelected
                /// Button1.ItemSelected
                /// </summary>
                public const uint Button_1_Button_SelectedState = 1001;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button2ItemSelected
                /// Button2.ItemSelected
                /// </summary>
                public const uint Button_2_Button_SelectedState = 1002;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button3ItemSelected
                /// Button3.ItemSelected
                /// </summary>
                public const uint Button_3_Button_SelectedState = 1003;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button4ItemSelected
                /// Button4.ItemSelected
                /// </summary>
                public const uint Button_4_Button_SelectedState = 1004;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button5ItemSelected
                /// Button5.ItemSelected
                /// </summary>
                public const uint Button_5_Button_SelectedState = 1005;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button6ItemSelected
                /// Button6.ItemSelected
                /// </summary>
                public const uint Button_6_Button_SelectedState = 1006;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button7ItemSelected
                /// Button7.ItemSelected
                /// </summary>
                public const uint Button_7_Button_SelectedState = 1007;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button8ItemSelected
                /// Button8.ItemSelected
                /// </summary>
                public const uint Button_8_Button_SelectedState = 1008;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button9ItemSelected
                /// Button9.ItemSelected
                /// </summary>
                public const uint Button_9_Button_SelectedState = 1009;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button10ItemSelected
                /// Button10.ItemSelected
                /// </summary>
                public const uint Button_10_Button_SelectedState = 1010;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button11ItemSelected
                /// Button11.ItemSelected
                /// </summary>
                public const uint Button_11_Button_SelectedState = 1011;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button12ItemSelected
                /// Button12.ItemSelected
                /// </summary>
                public const uint Button_12_Button_SelectedState = 1012;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button13ItemSelected
                /// Button13.ItemSelected
                /// </summary>
                public const uint Button_13_Button_SelectedState = 1013;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button14ItemSelected
                /// Button14.ItemSelected
                /// </summary>
                public const uint Button_14_Button_SelectedState = 1014;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button15ItemSelected
                /// Button15.ItemSelected
                /// </summary>
                public const uint Button_15_Button_SelectedState = 1015;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button16ItemSelected
                /// Button16.ItemSelected
                /// </summary>
                public const uint Button_16_Button_SelectedState = 1016;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button17ItemSelected
                /// Button17.ItemSelected
                /// </summary>
                public const uint Button_17_Button_SelectedState = 1017;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button18ItemSelected
                /// Button18.ItemSelected
                /// </summary>
                public const uint Button_18_Button_SelectedState = 1018;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button19ItemSelected
                /// Button19.ItemSelected
                /// </summary>
                public const uint Button_19_Button_SelectedState = 1019;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button20ItemSelected
                /// Button20.ItemSelected
                /// </summary>
                public const uint Button_20_Button_SelectedState = 1020;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button21ItemSelected
                /// Button21.ItemSelected
                /// </summary>
                public const uint Button_21_Button_SelectedState = 1021;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button22ItemSelected
                /// Button22.ItemSelected
                /// </summary>
                public const uint Button_22_Button_SelectedState = 1022;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button23ItemSelected
                /// Button23.ItemSelected
                /// </summary>
                public const uint Button_23_Button_SelectedState = 1023;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button24ItemSelected
                /// Button24.ItemSelected
                /// </summary>
                public const uint Button_24_Button_SelectedState = 1024;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button25ItemSelected
                /// Button25.ItemSelected
                /// </summary>
                public const uint Button_25_Button_SelectedState = 1025;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button26ItemSelected
                /// Button26.ItemSelected
                /// </summary>
                public const uint Button_26_Button_SelectedState = 1026;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button27ItemSelected
                /// Button27.ItemSelected
                /// </summary>
                public const uint Button_27_Button_SelectedState = 1027;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button28ItemSelected
                /// Button28.ItemSelected
                /// </summary>
                public const uint Button_28_Button_SelectedState = 1028;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button29ItemSelected
                /// Button29.ItemSelected
                /// </summary>
                public const uint Button_29_Button_SelectedState = 1029;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button30ItemSelected
                /// Button30.ItemSelected
                /// </summary>
                public const uint Button_30_Button_SelectedState = 1030;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button31ItemSelected
                /// Button31.ItemSelected
                /// </summary>
                public const uint Button_31_Button_SelectedState = 1031;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button32ItemSelected
                /// Button32.ItemSelected
                /// </summary>
                public const uint Button_32_Button_SelectedState = 1032;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button33ItemSelected
                /// Button33.ItemSelected
                /// </summary>
                public const uint Button_33_Button_SelectedState = 1033;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button34ItemSelected
                /// Button34.ItemSelected
                /// </summary>
                public const uint Button_34_Button_SelectedState = 1034;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button35ItemSelected
                /// Button35.ItemSelected
                /// </summary>
                public const uint Button_35_Button_SelectedState = 1035;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button36ItemSelected
                /// Button36.ItemSelected
                /// </summary>
                public const uint Button_36_Button_SelectedState = 1036;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button37ItemSelected
                /// Button37.ItemSelected
                /// </summary>
                public const uint Button_37_Button_SelectedState = 1037;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button38ItemSelected
                /// Button38.ItemSelected
                /// </summary>
                public const uint Button_38_Button_SelectedState = 1038;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button39ItemSelected
                /// Button39.ItemSelected
                /// </summary>
                public const uint Button_39_Button_SelectedState = 1039;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button40ItemSelected
                /// Button40.ItemSelected
                /// </summary>
                public const uint Button_40_Button_SelectedState = 1040;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button41ItemSelected
                /// Button41.ItemSelected
                /// </summary>
                public const uint Button_41_Button_SelectedState = 1041;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button42ItemSelected
                /// Button42.ItemSelected
                /// </summary>
                public const uint Button_42_Button_SelectedState = 1042;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button43ItemSelected
                /// Button43.ItemSelected
                /// </summary>
                public const uint Button_43_Button_SelectedState = 1043;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button44ItemSelected
                /// Button44.ItemSelected
                /// </summary>
                public const uint Button_44_Button_SelectedState = 1044;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button45ItemSelected
                /// Button45.ItemSelected
                /// </summary>
                public const uint Button_45_Button_SelectedState = 1045;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button46ItemSelected
                /// Button46.ItemSelected
                /// </summary>
                public const uint Button_46_Button_SelectedState = 1046;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button47ItemSelected
                /// Button47.ItemSelected
                /// </summary>
                public const uint Button_47_Button_SelectedState = 1047;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button48ItemSelected
                /// Button48.ItemSelected
                /// </summary>
                public const uint Button_48_Button_SelectedState = 1048;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button49ItemSelected
                /// Button49.ItemSelected
                /// </summary>
                public const uint Button_49_Button_SelectedState = 1049;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: CableTV.CATVPresets.Button50ItemSelected
                /// Button50.ItemSelected
                /// </summary>
                public const uint Button_50_Button_SelectedState = 1050;

            }
            /// <summary>
            /// Serial signals.
            /// </summary>
            internal static class Strings
            {

                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button1Text
                /// Button1.Text
                /// </summary>
                public const uint Button_1_Button_TextState = 1;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button2Text
                /// Button2.Text
                /// </summary>
                public const uint Button_2_Button_TextState = 2;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button3Text
                /// Button3.Text
                /// </summary>
                public const uint Button_3_Button_TextState = 3;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button4Text
                /// Button4.Text
                /// </summary>
                public const uint Button_4_Button_TextState = 4;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button5Text
                /// Button5.Text
                /// </summary>
                public const uint Button_5_Button_TextState = 5;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button6Text
                /// Button6.Text
                /// </summary>
                public const uint Button_6_Button_TextState = 6;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button7Text
                /// Button7.Text
                /// </summary>
                public const uint Button_7_Button_TextState = 7;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button8Text
                /// Button8.Text
                /// </summary>
                public const uint Button_8_Button_TextState = 8;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button9Text
                /// Button9.Text
                /// </summary>
                public const uint Button_9_Button_TextState = 9;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button10Text
                /// Button10.Text
                /// </summary>
                public const uint Button_10_Button_TextState = 10;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button11Text
                /// Button11.Text
                /// </summary>
                public const uint Button_11_Button_TextState = 11;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button12Text
                /// Button12.Text
                /// </summary>
                public const uint Button_12_Button_TextState = 12;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button13Text
                /// Button13.Text
                /// </summary>
                public const uint Button_13_Button_TextState = 13;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button14Text
                /// Button14.Text
                /// </summary>
                public const uint Button_14_Button_TextState = 14;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button15Text
                /// Button15.Text
                /// </summary>
                public const uint Button_15_Button_TextState = 15;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button16Text
                /// Button16.Text
                /// </summary>
                public const uint Button_16_Button_TextState = 16;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button17Text
                /// Button17.Text
                /// </summary>
                public const uint Button_17_Button_TextState = 17;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button18Text
                /// Button18.Text
                /// </summary>
                public const uint Button_18_Button_TextState = 18;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button19Text
                /// Button19.Text
                /// </summary>
                public const uint Button_19_Button_TextState = 19;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button20Text
                /// Button20.Text
                /// </summary>
                public const uint Button_20_Button_TextState = 20;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button21Text
                /// Button21.Text
                /// </summary>
                public const uint Button_21_Button_TextState = 21;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button22Text
                /// Button22.Text
                /// </summary>
                public const uint Button_22_Button_TextState = 22;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button23Text
                /// Button23.Text
                /// </summary>
                public const uint Button_23_Button_TextState = 23;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button24Text
                /// Button24.Text
                /// </summary>
                public const uint Button_24_Button_TextState = 24;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button25Text
                /// Button25.Text
                /// </summary>
                public const uint Button_25_Button_TextState = 25;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button26Text
                /// Button26.Text
                /// </summary>
                public const uint Button_26_Button_TextState = 26;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button27Text
                /// Button27.Text
                /// </summary>
                public const uint Button_27_Button_TextState = 27;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button28Text
                /// Button28.Text
                /// </summary>
                public const uint Button_28_Button_TextState = 28;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button29Text
                /// Button29.Text
                /// </summary>
                public const uint Button_29_Button_TextState = 29;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button30Text
                /// Button30.Text
                /// </summary>
                public const uint Button_30_Button_TextState = 30;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button31Text
                /// Button31.Text
                /// </summary>
                public const uint Button_31_Button_TextState = 31;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button32Text
                /// Button32.Text
                /// </summary>
                public const uint Button_32_Button_TextState = 32;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button33Text
                /// Button33.Text
                /// </summary>
                public const uint Button_33_Button_TextState = 33;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button34Text
                /// Button34.Text
                /// </summary>
                public const uint Button_34_Button_TextState = 34;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button35Text
                /// Button35.Text
                /// </summary>
                public const uint Button_35_Button_TextState = 35;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button36Text
                /// Button36.Text
                /// </summary>
                public const uint Button_36_Button_TextState = 36;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button37Text
                /// Button37.Text
                /// </summary>
                public const uint Button_37_Button_TextState = 37;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button38Text
                /// Button38.Text
                /// </summary>
                public const uint Button_38_Button_TextState = 38;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button39Text
                /// Button39.Text
                /// </summary>
                public const uint Button_39_Button_TextState = 39;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button40Text
                /// Button40.Text
                /// </summary>
                public const uint Button_40_Button_TextState = 40;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button41Text
                /// Button41.Text
                /// </summary>
                public const uint Button_41_Button_TextState = 41;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button42Text
                /// Button42.Text
                /// </summary>
                public const uint Button_42_Button_TextState = 42;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button43Text
                /// Button43.Text
                /// </summary>
                public const uint Button_43_Button_TextState = 43;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button44Text
                /// Button44.Text
                /// </summary>
                public const uint Button_44_Button_TextState = 44;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button45Text
                /// Button45.Text
                /// </summary>
                public const uint Button_45_Button_TextState = 45;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button46Text
                /// Button46.Text
                /// </summary>
                public const uint Button_46_Button_TextState = 46;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button47Text
                /// Button47.Text
                /// </summary>
                public const uint Button_47_Button_TextState = 47;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button48Text
                /// Button48.Text
                /// </summary>
                public const uint Button_48_Button_TextState = 48;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button49Text
                /// Button49.Text
                /// </summary>
                public const uint Button_49_Button_TextState = 49;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: CableTV.CATVPresets.Button50Text
                /// Button50.Text
                /// </summary>
                public const uint Button_50_Button_TextState = 50;
            }
        }

        #endregion

        #region Construction and Initialization

        /// <summary>
        /// Initializes a new instance of the <see cref="CATVPresets"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        internal CATVPresets(ComponentMediator componentMediator, uint controlJoinId, uint? itemCount)
        {
            ComponentMediator = componentMediator;
            Initialize(controlJoinId, itemCount);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CATVPresets"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        internal CATVPresets(ComponentMediator componentMediator, uint controlJoinId) : this(componentMediator, controlJoinId, null)
        {
        }

        /// <summary>
        /// Initializes a new instance with default itemCount.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        private void Initialize(uint controlJoinId)
        {
            Initialize(controlJoinId, null);
        }

        private Dictionary<string, Indexes> _indexLookup = new Dictionary<string, Indexes>();

        /// <summary>
        /// Initializes a new instance of the <see cref="CATVPresets"/> component class.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        private void Initialize(uint controlJoinId, uint? itemCount)
        {
            ControlJoinId = controlJoinId; 
 
            _devices = new List<BasicTriListWithSmartObject>(); 
 
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_1_Button_PressEvent, onButton_1_Button_Press);
            ComponentMediator.ConfigureBooleanItemEvent(controlJoinId, Joins.Booleans.Button_1_Button_PressEvent, GetIndexes, onButton_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_2_Button_PressEvent, onButton_2_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_3_Button_PressEvent, onButton_3_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_4_Button_PressEvent, onButton_4_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_5_Button_PressEvent, onButton_5_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_6_Button_PressEvent, onButton_6_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_7_Button_PressEvent, onButton_7_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_8_Button_PressEvent, onButton_8_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_9_Button_PressEvent, onButton_9_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_10_Button_PressEvent, onButton_10_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_11_Button_PressEvent, onButton_11_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_12_Button_PressEvent, onButton_12_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_13_Button_PressEvent, onButton_13_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_14_Button_PressEvent, onButton_14_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_15_Button_PressEvent, onButton_15_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_16_Button_PressEvent, onButton_16_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_17_Button_PressEvent, onButton_17_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_18_Button_PressEvent, onButton_18_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_19_Button_PressEvent, onButton_19_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_20_Button_PressEvent, onButton_20_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_21_Button_PressEvent, onButton_21_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_22_Button_PressEvent, onButton_22_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_23_Button_PressEvent, onButton_23_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_24_Button_PressEvent, onButton_24_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_25_Button_PressEvent, onButton_25_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_26_Button_PressEvent, onButton_26_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_27_Button_PressEvent, onButton_27_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_28_Button_PressEvent, onButton_28_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_29_Button_PressEvent, onButton_29_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_30_Button_PressEvent, onButton_30_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_31_Button_PressEvent, onButton_31_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_32_Button_PressEvent, onButton_32_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_33_Button_PressEvent, onButton_33_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_34_Button_PressEvent, onButton_34_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_35_Button_PressEvent, onButton_35_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_36_Button_PressEvent, onButton_36_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_37_Button_PressEvent, onButton_37_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_38_Button_PressEvent, onButton_38_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_39_Button_PressEvent, onButton_39_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_40_Button_PressEvent, onButton_40_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_41_Button_PressEvent, onButton_41_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_42_Button_PressEvent, onButton_42_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_43_Button_PressEvent, onButton_43_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_44_Button_PressEvent, onButton_44_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_45_Button_PressEvent, onButton_45_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_46_Button_PressEvent, onButton_46_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_47_Button_PressEvent, onButton_47_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_48_Button_PressEvent, onButton_48_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_49_Button_PressEvent, onButton_49_Button_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Button_50_Button_PressEvent, onButton_50_Button_Press);
        }

        /// <summary>
        /// Get the offset when using indexed complex components.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId of the component.</param>
        /// <param name="join">The join offset.</param>
        /// <param name="eSigType">The join data type.</param>
        private Indexes GetIndexes(uint controlJoinId, uint join, eSigType eSigType)
        {
            if (controlJoinId == ControlJoinId &&
                join >= Joins.Booleans.Button_1_Button_PressEvent &&
                join <= 1050)
            {
                return new Indexes(0, (ushort)(join - Joins.Booleans.Button_1_Button_PressEvent), false);
            }

            return new Indexes(0, 0, true);
        }

        public void AddDevice(BasicTriListWithSmartObject device)
        {
            Devices.Add(device);
            ComponentMediator.HookSmartObjectEvents(device.SmartObjects[ControlJoinId]);
        }

        public void RemoveDevice(BasicTriListWithSmartObject device)
        {
            Devices.Remove(device);
            ComponentMediator.UnHookSmartObjectEvents(device.SmartObjects[ControlJoinId]);
        }

        #endregion

        #region CH5 Contract

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_1_Button_PressEvent;
        private void onButton_1_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_1_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_2_Button_PressEvent;
        private void onButton_2_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_2_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_3_Button_PressEvent;
        private void onButton_3_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_3_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_4_Button_PressEvent;
        private void onButton_4_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_4_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_5_Button_PressEvent;
        private void onButton_5_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_5_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_6_Button_PressEvent;
        private void onButton_6_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_6_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_7_Button_PressEvent;
        private void onButton_7_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_7_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_8_Button_PressEvent;
        private void onButton_8_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_8_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_9_Button_PressEvent;
        private void onButton_9_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_9_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_10_Button_PressEvent;
        private void onButton_10_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_10_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_11_Button_PressEvent;
        private void onButton_11_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_11_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_12_Button_PressEvent;
        private void onButton_12_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_12_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_13_Button_PressEvent;
        private void onButton_13_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_13_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_14_Button_PressEvent;
        private void onButton_14_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_14_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_15_Button_PressEvent;
        private void onButton_15_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_15_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_16_Button_PressEvent;
        private void onButton_16_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_16_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_17_Button_PressEvent;
        private void onButton_17_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_17_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_18_Button_PressEvent;
        private void onButton_18_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_18_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_19_Button_PressEvent;
        private void onButton_19_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_19_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_20_Button_PressEvent;
        private void onButton_20_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_20_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_21_Button_PressEvent;
        private void onButton_21_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_21_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_22_Button_PressEvent;
        private void onButton_22_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_22_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_23_Button_PressEvent;
        private void onButton_23_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_23_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_24_Button_PressEvent;
        private void onButton_24_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_24_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_25_Button_PressEvent;
        private void onButton_25_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_25_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_26_Button_PressEvent;
        private void onButton_26_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_26_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_27_Button_PressEvent;
        private void onButton_27_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_27_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_28_Button_PressEvent;
        private void onButton_28_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_28_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_29_Button_PressEvent;
        private void onButton_29_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_29_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_30_Button_PressEvent;
        private void onButton_30_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_30_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_31_Button_PressEvent;
        private void onButton_31_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_31_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_32_Button_PressEvent;
        private void onButton_32_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_32_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_33_Button_PressEvent;
        private void onButton_33_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_33_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_34_Button_PressEvent;
        private void onButton_34_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_34_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_35_Button_PressEvent;
        private void onButton_35_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_35_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_36_Button_PressEvent;
        private void onButton_36_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_36_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_37_Button_PressEvent;
        private void onButton_37_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_37_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_38_Button_PressEvent;
        private void onButton_38_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_38_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_39_Button_PressEvent;
        private void onButton_39_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_39_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_40_Button_PressEvent;
        private void onButton_40_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_40_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_41_Button_PressEvent;
        private void onButton_41_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_41_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_42_Button_PressEvent;
        private void onButton_42_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_42_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_43_Button_PressEvent;
        private void onButton_43_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_43_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_44_Button_PressEvent;
        private void onButton_44_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_44_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_45_Button_PressEvent;
        private void onButton_45_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_45_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_46_Button_PressEvent;
        private void onButton_46_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_46_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_47_Button_PressEvent;
        private void onButton_47_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_47_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_48_Button_PressEvent;
        private void onButton_48_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_48_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_49_Button_PressEvent;
        private void onButton_49_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_49_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Button_50_Button_PressEvent;
        private void onButton_50_Button_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Button_50_Button_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public void Button_1_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_1_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_1_Button_Selected(bool digital)
        {
            Button_1_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_10_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_10_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_10_Button_Selected(bool digital)
        {
            Button_10_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_11_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_11_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_11_Button_Selected(bool digital)
        {
            Button_11_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_12_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_12_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_12_Button_Selected(bool digital)
        {
            Button_12_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_13_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_13_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_13_Button_Selected(bool digital)
        {
            Button_13_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_14_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_14_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_14_Button_Selected(bool digital)
        {
            Button_14_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_15_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_15_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_15_Button_Selected(bool digital)
        {
            Button_15_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_16_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_16_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_16_Button_Selected(bool digital)
        {
            Button_16_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_17_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_17_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_17_Button_Selected(bool digital)
        {
            Button_17_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_18_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_18_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_18_Button_Selected(bool digital)
        {
            Button_18_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_19_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_19_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_19_Button_Selected(bool digital)
        {
            Button_19_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_2_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_2_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_2_Button_Selected(bool digital)
        {
            Button_2_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_20_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_20_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_20_Button_Selected(bool digital)
        {
            Button_20_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_21_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_21_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_21_Button_Selected(bool digital)
        {
            Button_21_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_22_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_22_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_22_Button_Selected(bool digital)
        {
            Button_22_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_23_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_23_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_23_Button_Selected(bool digital)
        {
            Button_23_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_24_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_24_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_24_Button_Selected(bool digital)
        {
            Button_24_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_25_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_25_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_25_Button_Selected(bool digital)
        {
            Button_25_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_26_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_26_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_26_Button_Selected(bool digital)
        {
            Button_26_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_27_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_27_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_27_Button_Selected(bool digital)
        {
            Button_27_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_28_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_28_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_28_Button_Selected(bool digital)
        {
            Button_28_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_29_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_29_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_29_Button_Selected(bool digital)
        {
            Button_29_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_3_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_3_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_3_Button_Selected(bool digital)
        {
            Button_3_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_30_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_30_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_30_Button_Selected(bool digital)
        {
            Button_30_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_31_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_31_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_31_Button_Selected(bool digital)
        {
            Button_31_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_32_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_32_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_32_Button_Selected(bool digital)
        {
            Button_32_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_33_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_33_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_33_Button_Selected(bool digital)
        {
            Button_33_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_34_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_34_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_34_Button_Selected(bool digital)
        {
            Button_34_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_35_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_35_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_35_Button_Selected(bool digital)
        {
            Button_35_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_36_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_36_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_36_Button_Selected(bool digital)
        {
            Button_36_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_37_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_37_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_37_Button_Selected(bool digital)
        {
            Button_37_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_38_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_38_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_38_Button_Selected(bool digital)
        {
            Button_38_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_39_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_39_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_39_Button_Selected(bool digital)
        {
            Button_39_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_4_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_4_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_4_Button_Selected(bool digital)
        {
            Button_4_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_40_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_40_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_40_Button_Selected(bool digital)
        {
            Button_40_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_41_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_41_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_41_Button_Selected(bool digital)
        {
            Button_41_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_42_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_42_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_42_Button_Selected(bool digital)
        {
            Button_42_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_43_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_43_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_43_Button_Selected(bool digital)
        {
            Button_43_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_44_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_44_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_44_Button_Selected(bool digital)
        {
            Button_44_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_45_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_45_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_45_Button_Selected(bool digital)
        {
            Button_45_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_46_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_46_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_46_Button_Selected(bool digital)
        {
            Button_46_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_47_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_47_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_47_Button_Selected(bool digital)
        {
            Button_47_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_48_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_48_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_48_Button_Selected(bool digital)
        {
            Button_48_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_49_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_49_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_49_Button_Selected(bool digital)
        {
            Button_49_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_5_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_5_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_5_Button_Selected(bool digital)
        {
            Button_5_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_50_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_50_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_50_Button_Selected(bool digital)
        {
            Button_50_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_6_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_6_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_6_Button_Selected(bool digital)
        {
            Button_6_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_7_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_7_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_7_Button_Selected(bool digital)
        {
            Button_7_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_8_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_8_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_8_Button_Selected(bool digital)
        {
            Button_8_Button_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Button_9_Button_Selected(CATVPresetsBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Button_9_Button_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_9_Button_Selected(bool digital)
        {
            Button_9_Button_Selected((sig, component) => sig.BoolValue = digital);
        }


        /// <inheritdoc/>
        public void Button_1_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_1_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_1_Button_Text(string serial)
        {
            Button_1_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_10_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_10_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_10_Button_Text(string serial)
        {
            Button_10_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_11_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_11_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_11_Button_Text(string serial)
        {
            Button_11_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_12_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_12_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_12_Button_Text(string serial)
        {
            Button_12_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_13_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_13_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_13_Button_Text(string serial)
        {
            Button_13_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_14_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_14_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_14_Button_Text(string serial)
        {
            Button_14_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_15_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_15_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_15_Button_Text(string serial)
        {
            Button_15_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_16_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_16_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_16_Button_Text(string serial)
        {
            Button_16_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_17_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_17_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_17_Button_Text(string serial)
        {
            Button_17_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_18_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_18_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_18_Button_Text(string serial)
        {
            Button_18_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_19_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_19_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_19_Button_Text(string serial)
        {
            Button_19_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_2_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_2_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_2_Button_Text(string serial)
        {
            Button_2_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_20_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_20_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_20_Button_Text(string serial)
        {
            Button_20_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_21_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_21_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_21_Button_Text(string serial)
        {
            Button_21_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_22_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_22_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_22_Button_Text(string serial)
        {
            Button_22_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_23_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_23_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_23_Button_Text(string serial)
        {
            Button_23_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_24_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_24_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_24_Button_Text(string serial)
        {
            Button_24_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_25_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_25_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_25_Button_Text(string serial)
        {
            Button_25_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_26_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_26_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_26_Button_Text(string serial)
        {
            Button_26_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_27_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_27_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_27_Button_Text(string serial)
        {
            Button_27_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_28_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_28_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_28_Button_Text(string serial)
        {
            Button_28_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_29_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_29_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_29_Button_Text(string serial)
        {
            Button_29_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_3_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_3_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_3_Button_Text(string serial)
        {
            Button_3_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_30_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_30_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_30_Button_Text(string serial)
        {
            Button_30_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_31_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_31_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_31_Button_Text(string serial)
        {
            Button_31_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_32_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_32_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_32_Button_Text(string serial)
        {
            Button_32_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_33_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_33_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_33_Button_Text(string serial)
        {
            Button_33_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_34_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_34_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_34_Button_Text(string serial)
        {
            Button_34_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_35_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_35_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_35_Button_Text(string serial)
        {
            Button_35_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_36_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_36_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_36_Button_Text(string serial)
        {
            Button_36_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_37_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_37_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_37_Button_Text(string serial)
        {
            Button_37_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_38_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_38_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_38_Button_Text(string serial)
        {
            Button_38_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_39_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_39_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_39_Button_Text(string serial)
        {
            Button_39_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_4_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_4_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_4_Button_Text(string serial)
        {
            Button_4_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_40_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_40_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_40_Button_Text(string serial)
        {
            Button_40_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_41_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_41_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_41_Button_Text(string serial)
        {
            Button_41_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_42_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_42_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_42_Button_Text(string serial)
        {
            Button_42_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_43_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_43_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_43_Button_Text(string serial)
        {
            Button_43_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_44_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_44_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_44_Button_Text(string serial)
        {
            Button_44_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_45_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_45_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_45_Button_Text(string serial)
        {
            Button_45_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_46_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_46_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_46_Button_Text(string serial)
        {
            Button_46_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_47_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_47_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_47_Button_Text(string serial)
        {
            Button_47_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_48_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_48_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_48_Button_Text(string serial)
        {
            Button_48_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_49_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_49_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_49_Button_Text(string serial)
        {
            Button_49_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_5_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_5_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_5_Button_Text(string serial)
        {
            Button_5_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_50_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_50_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_50_Button_Text(string serial)
        {
            Button_50_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_6_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_6_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_6_Button_Text(string serial)
        {
            Button_6_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_7_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_7_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_7_Button_Text(string serial)
        {
            Button_7_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_8_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_8_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_8_Button_Text(string serial)
        {
            Button_8_Button_Text((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Button_9_Button_Text(CATVPresetsStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Button_9_Button_TextState], this);
            }
        }

        /// <inheritdoc/>
        public void Button_9_Button_Text(string serial)
        {
            Button_9_Button_Text((sig, component) => sig.StringValue = serial);
        }

        #endregion

        #region Overrides

        public override int GetHashCode()
        {
            return (int)ControlJoinId;
        }

        public override string ToString()
        {
            return string.Format("Contract: {0} Component: {1} HashCode: {2} {3}", "CATVPresets", GetType().Name, GetHashCode(), UserObject != null ? "UserObject: " + UserObject : null);
        }

        #endregion

        #region IDisposable

        public bool IsDisposed { get; set; }

        public void Dispose()
        {
            if (IsDisposed)
                return;

            IsDisposed = true;

            Button_1_Button_PressEvent = null;
            Button_PressEvent = null;
            Button_2_Button_PressEvent = null;
            Button_3_Button_PressEvent = null;
            Button_4_Button_PressEvent = null;
            Button_5_Button_PressEvent = null;
            Button_6_Button_PressEvent = null;
            Button_7_Button_PressEvent = null;
            Button_8_Button_PressEvent = null;
            Button_9_Button_PressEvent = null;
            Button_10_Button_PressEvent = null;
            Button_11_Button_PressEvent = null;
            Button_12_Button_PressEvent = null;
            Button_13_Button_PressEvent = null;
            Button_14_Button_PressEvent = null;
            Button_15_Button_PressEvent = null;
            Button_16_Button_PressEvent = null;
            Button_17_Button_PressEvent = null;
            Button_18_Button_PressEvent = null;
            Button_19_Button_PressEvent = null;
            Button_20_Button_PressEvent = null;
            Button_21_Button_PressEvent = null;
            Button_22_Button_PressEvent = null;
            Button_23_Button_PressEvent = null;
            Button_24_Button_PressEvent = null;
            Button_25_Button_PressEvent = null;
            Button_26_Button_PressEvent = null;
            Button_27_Button_PressEvent = null;
            Button_28_Button_PressEvent = null;
            Button_29_Button_PressEvent = null;
            Button_30_Button_PressEvent = null;
            Button_31_Button_PressEvent = null;
            Button_32_Button_PressEvent = null;
            Button_33_Button_PressEvent = null;
            Button_34_Button_PressEvent = null;
            Button_35_Button_PressEvent = null;
            Button_36_Button_PressEvent = null;
            Button_37_Button_PressEvent = null;
            Button_38_Button_PressEvent = null;
            Button_39_Button_PressEvent = null;
            Button_40_Button_PressEvent = null;
            Button_41_Button_PressEvent = null;
            Button_42_Button_PressEvent = null;
            Button_43_Button_PressEvent = null;
            Button_44_Button_PressEvent = null;
            Button_45_Button_PressEvent = null;
            Button_46_Button_PressEvent = null;
            Button_47_Button_PressEvent = null;
            Button_48_Button_PressEvent = null;
            Button_49_Button_PressEvent = null;
            Button_50_Button_PressEvent = null;
        }

        #endregion
    }
}
