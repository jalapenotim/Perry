//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CrestronConstruct.
//     AppHost:     2.601.10.0
//     UI Plugin:   1.4201.17.0
//
//     Project:     SLRC-Tech
//     Version:     1.0.0.0
//     Sdk:         CH5:2.16.0
//     Strategy:    Modern
//     IndexOnly:   False
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Crestron.SimplSharp;
using Crestron.SimplSharpPro;
using Crestron.SimplSharpPro.DeviceSupport;
using SLRCTech;

namespace SLRCTech.Settings
{

    /// <summary>
    /// Allow events by list item and states (feedbacks) to be set by item index.
    /// </summary>
    public partial interface IDaySelectTabButtonByItem
    {
        /// <summary>
        /// Fires on button list presses.  Event carries <see="IndexedButtonEventArgs"/> with ButtonIndex property (0 based).
        /// </summary>
        event EventHandler<IndexedButtonEventArgs> Tab_PressEvent;

        /// <summary>
        /// Tab1._Selected Feedback
        /// </summary>
        /// <param name="buttonIndex">The index of the button (0 based).</param>
        /// <param name="callback">The delegate to set the feedback.</param>
        void Tab_Selected(ushort buttonIndex, DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Helper Tab1._Selected Feedback
        /// </summary>
        /// <param name="buttonIndex">The index of the button (0 based).</param>
        /// <param name="digital">The <see="bool"/> value to set on the panel.</param>
        void Tab_Selected(ushort buttonIndex, bool digital);
    }


    /// <summary>
    /// Search List
    /// </summary>
    internal partial class DaySelectTabButton
    {
        #region CH5 Contract
        /// <inheritdoc/>
        public event EventHandler<IndexedButtonEventArgs> Tab_PressEvent;
        private void onTab_Press(IndexedEventArgs eventArgs)
        {
            EventHandler<IndexedButtonEventArgs> handler = Tab_PressEvent;
            if (handler != null)
                handler(this, new IndexedButtonEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.JoinIndex));
        }
                
        /// <inheritdoc/>
        public void Tab_Selected(ushort buttonIndex, DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_1_Item_SelectedState + (uint) buttonIndex], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_Selected(ushort buttonIndex, bool digital)
        {
            Tab_Selected(buttonIndex, (sig, component) => sig.BoolValue = digital);
        }

        #endregion
    }

    /// <summary>
    /// Day Select Tab Button
    /// </summary>
    public partial interface IDaySelectTabButton : IDaySelectTabButtonByItem
    {
        object UserObject { get; set; }

        /// <summary>
        /// Event Tab1._Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Tab_1_Item_PressEvent;

        /// <summary>
        /// Event Tab2._Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Tab_2_Item_PressEvent;

        /// <summary>
        /// Event Tab3._Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Tab_3_Item_PressEvent;

        /// <summary>
        /// Event Tab4._Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Tab_4_Item_PressEvent;

        /// <summary>
        /// Event Tab5._Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Tab_5_Item_PressEvent;

        /// <summary>
        /// Event Tab6._Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Tab_6_Item_PressEvent;

        /// <summary>
        /// Event Tab7._Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Tab_7_Item_PressEvent;

        /// <summary>
        /// Event Tab8._Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Tab_8_Item_PressEvent;

        /// <summary>
        /// Tab1._Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Tab_1_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Tab1._Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Tab_1_Item_Selected(bool digital);

        /// <summary>
        /// Tab2._Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Tab_2_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Tab2._Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Tab_2_Item_Selected(bool digital);

        /// <summary>
        /// Tab3._Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Tab_3_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Tab3._Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Tab_3_Item_Selected(bool digital);

        /// <summary>
        /// Tab4._Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Tab_4_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Tab4._Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Tab_4_Item_Selected(bool digital);

        /// <summary>
        /// Tab5._Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Tab_5_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Tab5._Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Tab_5_Item_Selected(bool digital);

        /// <summary>
        /// Tab6._Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Tab_6_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Tab6._Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Tab_6_Item_Selected(bool digital);

        /// <summary>
        /// Tab7._Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Tab_7_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Tab7._Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Tab_7_Item_Selected(bool digital);

        /// <summary>
        /// Tab8._Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Tab_8_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback);

        /// <summary>
        /// Tab8._Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Tab_8_Item_Selected(bool digital);
    }

    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="boolInputSig">The <see cref="BoolInputSig"/> joinInfo data.</param>
    /// <param name="dayselecttabbutton">The <see cref="IDaySelectTabButton"/> on which to apply the feedback.</param>
    public delegate void DaySelectTabButtonBoolInputSigDelegate(BoolInputSig boolInputSig, IDaySelectTabButton dayselecttabbutton);

    /// <summary>
    /// Day Select Tab Button
    /// </summary>
    internal partial class DaySelectTabButton : IDaySelectTabButton, IDisposable
    {
        #region Standard CH5 Component members

        private ComponentMediator ComponentMediator { get; set; }

        public object UserObject { get; set; }

        /// <summary>
        /// Gets the ControlJoinId a.k.a. SmartObjectId.  This Id identifies the extender symbol.
        /// </summary>
        public uint ControlJoinId { get; private set; }

        private IList<BasicTriListWithSmartObject> _devices;

        /// <summary>
        /// Gets the list of devices.
        /// </summary>
        public IList<BasicTriListWithSmartObject> Devices { get { return _devices; } }

        #endregion

        #region Joins

        private static class Joins
        {
            /// <summary>
            /// Digital signals,
            /// </summary>
            internal static class Booleans
            {
                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Settings.DaySelectTabButton.Tab1_Press
                /// Tab1._Press
                /// </summary>
                public const uint Tab_1_Item_PressEvent = 31;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Settings.DaySelectTabButton.Tab2_Press
                /// Tab2._Press
                /// </summary>
                public const uint Tab_2_Item_PressEvent = 32;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Settings.DaySelectTabButton.Tab3_Press
                /// Tab3._Press
                /// </summary>
                public const uint Tab_3_Item_PressEvent = 33;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Settings.DaySelectTabButton.Tab4_Press
                /// Tab4._Press
                /// </summary>
                public const uint Tab_4_Item_PressEvent = 34;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Settings.DaySelectTabButton.Tab5_Press
                /// Tab5._Press
                /// </summary>
                public const uint Tab_5_Item_PressEvent = 35;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Settings.DaySelectTabButton.Tab6_Press
                /// Tab6._Press
                /// </summary>
                public const uint Tab_6_Item_PressEvent = 36;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Settings.DaySelectTabButton.Tab7_Press
                /// Tab7._Press
                /// </summary>
                public const uint Tab_7_Item_PressEvent = 37;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Settings.DaySelectTabButton.Tab8_Press
                /// Tab8._Press
                /// </summary>
                public const uint Tab_8_Item_PressEvent = 38;


                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Settings.DaySelectTabButton.Tab1_Selected
                /// Tab1._Selected
                /// </summary>
                public const uint Tab_1_Item_SelectedState = 31;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Settings.DaySelectTabButton.Tab2_Selected
                /// Tab2._Selected
                /// </summary>
                public const uint Tab_2_Item_SelectedState = 32;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Settings.DaySelectTabButton.Tab3_Selected
                /// Tab3._Selected
                /// </summary>
                public const uint Tab_3_Item_SelectedState = 33;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Settings.DaySelectTabButton.Tab4_Selected
                /// Tab4._Selected
                /// </summary>
                public const uint Tab_4_Item_SelectedState = 34;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Settings.DaySelectTabButton.Tab5_Selected
                /// Tab5._Selected
                /// </summary>
                public const uint Tab_5_Item_SelectedState = 35;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Settings.DaySelectTabButton.Tab6_Selected
                /// Tab6._Selected
                /// </summary>
                public const uint Tab_6_Item_SelectedState = 36;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Settings.DaySelectTabButton.Tab7_Selected
                /// Tab7._Selected
                /// </summary>
                public const uint Tab_7_Item_SelectedState = 37;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Settings.DaySelectTabButton.Tab8_Selected
                /// Tab8._Selected
                /// </summary>
                public const uint Tab_8_Item_SelectedState = 38;

            }
        }

        #endregion

        #region Construction and Initialization

        /// <summary>
        /// Initializes a new instance of the <see cref="DaySelectTabButton"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        internal DaySelectTabButton(ComponentMediator componentMediator, uint controlJoinId, uint? itemCount)
        {
            ComponentMediator = componentMediator;
            Initialize(controlJoinId, itemCount);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DaySelectTabButton"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        internal DaySelectTabButton(ComponentMediator componentMediator, uint controlJoinId) : this(componentMediator, controlJoinId, null)
        {
        }

        /// <summary>
        /// Initializes a new instance with default itemCount.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        private void Initialize(uint controlJoinId)
        {
            Initialize(controlJoinId, null);
        }

        private Dictionary<string, Indexes> _indexLookup = new Dictionary<string, Indexes>();

        /// <summary>
        /// Initializes a new instance of the <see cref="DaySelectTabButton"/> component class.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        private void Initialize(uint controlJoinId, uint? itemCount)
        {
            ControlJoinId = controlJoinId; 
 
            _devices = new List<BasicTriListWithSmartObject>(); 
 
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Tab_1_Item_PressEvent, onTab_1_Item_Press);
            ComponentMediator.ConfigureBooleanItemEvent(controlJoinId, Joins.Booleans.Tab_1_Item_PressEvent, GetIndexes, onTab_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Tab_2_Item_PressEvent, onTab_2_Item_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Tab_3_Item_PressEvent, onTab_3_Item_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Tab_4_Item_PressEvent, onTab_4_Item_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Tab_5_Item_PressEvent, onTab_5_Item_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Tab_6_Item_PressEvent, onTab_6_Item_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Tab_7_Item_PressEvent, onTab_7_Item_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Tab_8_Item_PressEvent, onTab_8_Item_Press);
        }

        /// <summary>
        /// Get the offset when using indexed complex components.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId of the component.</param>
        /// <param name="join">The join offset.</param>
        /// <param name="eSigType">The join data type.</param>
        private Indexes GetIndexes(uint controlJoinId, uint join, eSigType eSigType)
        {
            if (controlJoinId == ControlJoinId &&
                join >= Joins.Booleans.Tab_1_Item_PressEvent &&
                join <= 38)
            {
                return new Indexes(0, (ushort)(join - Joins.Booleans.Tab_1_Item_PressEvent), false);
            }

            return new Indexes(0, 0, true);
        }

        public void AddDevice(BasicTriListWithSmartObject device)
        {
            Devices.Add(device);
            ComponentMediator.HookSmartObjectEvents(device.SmartObjects[ControlJoinId]);
        }

        public void RemoveDevice(BasicTriListWithSmartObject device)
        {
            Devices.Remove(device);
            ComponentMediator.UnHookSmartObjectEvents(device.SmartObjects[ControlJoinId]);
        }

        #endregion

        #region CH5 Contract

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Tab_1_Item_PressEvent;
        private void onTab_1_Item_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Tab_1_Item_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Tab_2_Item_PressEvent;
        private void onTab_2_Item_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Tab_2_Item_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Tab_3_Item_PressEvent;
        private void onTab_3_Item_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Tab_3_Item_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Tab_4_Item_PressEvent;
        private void onTab_4_Item_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Tab_4_Item_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Tab_5_Item_PressEvent;
        private void onTab_5_Item_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Tab_5_Item_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Tab_6_Item_PressEvent;
        private void onTab_6_Item_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Tab_6_Item_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Tab_7_Item_PressEvent;
        private void onTab_7_Item_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Tab_7_Item_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Tab_8_Item_PressEvent;
        private void onTab_8_Item_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Tab_8_Item_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public void Tab_1_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_1_Item_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_1_Item_Selected(bool digital)
        {
            Tab_1_Item_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Tab_2_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_2_Item_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_2_Item_Selected(bool digital)
        {
            Tab_2_Item_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Tab_3_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_3_Item_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_3_Item_Selected(bool digital)
        {
            Tab_3_Item_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Tab_4_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_4_Item_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_4_Item_Selected(bool digital)
        {
            Tab_4_Item_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Tab_5_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_5_Item_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_5_Item_Selected(bool digital)
        {
            Tab_5_Item_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Tab_6_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_6_Item_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_6_Item_Selected(bool digital)
        {
            Tab_6_Item_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Tab_7_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_7_Item_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_7_Item_Selected(bool digital)
        {
            Tab_7_Item_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Tab_8_Item_Selected(DaySelectTabButtonBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Tab_8_Item_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Tab_8_Item_Selected(bool digital)
        {
            Tab_8_Item_Selected((sig, component) => sig.BoolValue = digital);
        }

        #endregion

        #region Overrides

        public override int GetHashCode()
        {
            return (int)ControlJoinId;
        }

        public override string ToString()
        {
            return string.Format("Contract: {0} Component: {1} HashCode: {2} {3}", "DaySelectTabButton", GetType().Name, GetHashCode(), UserObject != null ? "UserObject: " + UserObject : null);
        }

        #endregion

        #region IDisposable

        public bool IsDisposed { get; set; }

        public void Dispose()
        {
            if (IsDisposed)
                return;

            IsDisposed = true;

            Tab_1_Item_PressEvent = null;
            Tab_PressEvent = null;
            Tab_2_Item_PressEvent = null;
            Tab_3_Item_PressEvent = null;
            Tab_4_Item_PressEvent = null;
            Tab_5_Item_PressEvent = null;
            Tab_6_Item_PressEvent = null;
            Tab_7_Item_PressEvent = null;
            Tab_8_Item_PressEvent = null;
        }

        #endregion
    }
}
